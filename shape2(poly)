#include <iostream>
#include<cmath>
using namespace std;

class Shape {
public:
    virtual double area() = 0;
    virtual double perimeter() = 0;
};

class Rectangle : public Shape {
private:
    double length;
    double width;

public:
    Rectangle(double l, double w) : length(l), width(w) {}

    double area() override {
        return length * width;
    }

    double perimeter() override {
        return 2 * (length + width);
    }
};

class Triangle : public Shape {
private:
    double side1;
    double side2;
    double side3;

public:
    Triangle(double s1, double s2, double s3) : side1(s1), side2(s2), side3(s3) {}

    double area() override {
        double s = (side1 + side2 + side3) / 2;
        return sqrt(s * (s - side1) * (s - side2) * (s - side3));
    }

    double perimeter() override {
        return side1 + side2 + side3;
    }
};

int main() {
    Rectangle rect(5, 3);
    Triangle tri(3, 4, 5);

    cout << "Rectangle - Area: " << rect.area() << ", Perimeter: " << rect.perimeter() << endl;
    cout << "Triangle - Area: " << tri.area() << ", Perimeter: " << tri.perimeter() << endl;

    return 0;
}
